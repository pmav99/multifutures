{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Overview","text":""},{"location":"index.html#multifutures","title":"<code>multifutures</code>","text":""},{"location":"api.html","title":"Reference","text":""},{"location":"api.html#multifutures.multi","title":"multifutures.multi","text":"<p>Helpers for multi processing/threading</p>"},{"location":"api.html#multifutures.rate_limit","title":"multifutures.rate_limit","text":""},{"location":"api.html#multifutures.rate_limit.wait","title":"wait","text":"<pre><code>wait(wait_time: float = 0.1, *, jitter: bool = True) -&gt; None\n</code></pre> <p>Wait for <code>wait_time</code> + some random <code>jitter</code></p> Source code in <code>multifutures/rate_limit.py</code> <pre><code>def wait(wait_time: float = 0.1, *, jitter: bool = True) -&gt; None:\n    \"\"\"Wait for `wait_time` + some random `jitter`\"\"\"\n    if jitter:\n        # Set jitter to be &lt;= 1% of wait_time\n        jitter_time = random.random() / (1 / wait_time * 100)  # noqa: S311 - suspicious-non-cryptographic-random-usage\n    else:\n        jitter_time = 0\n    time.sleep(wait_time + jitter_time)\n</code></pre>"},{"location":"installation.html","title":"Installation","text":""},{"location":"installation.html#installation","title":"Installation","text":""},{"location":"installation.html#pypi","title":"PyPI","text":"<pre><code>python -m pip install multifutures\n</code></pre>"},{"location":"installation.html#conda","title":"conda","text":"<p>not yet</p>"}]}